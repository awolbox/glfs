#!/usr/bin/bash

readonly VERSION='2.0'

# exit codes 
readonly EXIT_OK='0'				# completed without error
readonly EXIT_USAGE='64'			# error - general command line usage error 
readonly EXIT_DATAERR='65'			# error - corrupt data (.sig, checksums, etc.)
readonly EXIT_NOHOST='68'			# error - source get failed
readonly EXIT_UNAVAILABLE='69'		# error - improper input - (SRCBUILD not found)
readonly EXIT_NOPERM='70'			# error - improper permissions - (root permissions needed)
readonly EXIT_CANTCREATE='73'		# error - makesrc failed - cannot build source

# permissions/security
readonly _UID="$(id -u "$USER")"
readonly _GID="$(id -g "$USER")"

# color values
readonly bold='\e[1m'
readonly reset='\e[0m'
readonly red='\e[31m'
readonly green='\e[32m'
readonly yellow='\e[33m'
readonly blue='\e[34m'
readonly magenta='\e[0;35m'
readonly bold_red=${bold}${red}
readonly bold_green=${bold}${green}
readonly bold_yellow=${bold}${yellow}
readonly bold_blue=${bold}${blue}
readonly bold_magenta=${bold}${magenta}

# ux
_message() { [ $QUIET = 0 ] && echo -e "\t${bold_green}*${reset} ${*}" >&2; }
_warning() { [ $QUIET = 0 ] && echo -e "\t${bold_yellow}[W]${reset} ${*}" >&2; }
_error() { [ $QUIET = 0 ] && echo -e "\t${bold_red}[X]${reset} ${*}" >&2; }
_die() { [ $QUIET = 0 ] && { _error "${@}" && exit $_EX; } || exit $_EX; }

source "_tmp_space"
source "_version"
source "_usage"
source "_usage_error"
source "_has_user_config"
source "_has_keyring"
source "_repositories"
source "_read_SRCBUILD"
source "_has_dependencies"
source "_get_dependencies"
source "_get_source"
source "_source_verify"
source "_source_extract"

source get_info

# Make/Build source
makesrc() 
{ 
				
		[ $EUID -ne 0 ] && { exit $EX_NOPERM; }
				
		_read_SRCBUILD
		_has_keyring
	 	_has_needed_dependencies
		
		# cross-compilation toolchian

		# _source_tarball
}

# Global options
VERBOSE=0
QUIET=0
DEBUG=0
DEFAULT=0

# Options
small_options="c:si::x:hv"
long_options="config:,silent,info::,cc:,help,version"
options="$(getopt -o $small_options -l $long_options -n "$SRCBUILD" -- "$@")"

# No options
[ -z $1 ] && { _usage_error; }

# Execution
eval set -- "$options"
unset options

if [ $? -ne 0 ];
then
		_EX=$EX_DATAERR
		_die "Fatal error in eval set"
fi

while [ $? -eq 0 ]
do
		case "$1" in
				'-c'|'--config') 
						if [ -n $2 ];
						then
								MAKESRC_USER_CONFIG="$2"
								DEFAULT=1
						else
								_EX=$EXIT_USAGE; _die "Fatal error - no valid user configuration file specified"
						fi
						shift 2
						continue
						;;
				'-s'|'--silent') 
						QUIET=1
						shift 2
						continue
						;;
				'-i'|'--info')
						case "$2" in
								# long option - show more info
								'-a'|'--all')
									    :#get_info_long	
										;;
								
								*)
										get_info
										;;
						esac
						shift 2
						break
						;;
				'-x'|'--cc')
						:
						: # cross-compiler options
						:
						shift
						continue
						;;
				'-h'|'--help') 
						_usage
						break
						;;
				'-v'|'--version')
						_version
						break
						;;
				'--') 
						shift
						break
						;;
				*)
						_usage_error
						break
						;;
		esac
done

if [ "$SRCBUILD" == "SRCBUILD" ];
then
		cmd_makesrc
fi

exit $?

