#!/usr/bin/env bash

SRCARC=$(ls . | grep ".tar" | grep -v ".sig" | grep "$srcname" 2&> /dev/null; echo $?)
SRCKEYRING=$SOURCE_DIR/srcman.kys

args=('-h' '--help' '-q' '--query' '-i' '--interactive' 'SRCBUILD')

E_SBE=1			# error - SRCBUILD error

usage()
{
		largs(){
				for x in ${args[@]}
						do
								echo -n "[ $x ] "
						done
		};usage_short(){
				echo -e "Usage: $(basename $0) $(largs)... [ SRCBUILD ]"
		};usage_long(){
				usage_short
				echo -e "\nOptions:\n"
				echo -e "  ${args[0]},${args[1]}\t\tshow this help screen"
				echo -e "  ${args[2]},${args[3]}\t\tdisplays various information about SRCBUILD"
				echo -e "  ${args[4]},${args[5]}\trun $(basename $0) interactively"
				echo
		};usage_error(){ 
				echo -e "$(basename $0): invalid command\nUsage: $(largs)... [ SRCBUILD ]" 
		}
}

srcsrcbuild() # source SRCBUILD
{
		if [ -f ./SRCBUILD ] && [ -O ./SRCBUILD ] && [ -r ./SRCBUILD ] && [ -G ./SRCBUILD ] && [ -n ./SRCBUILD ];
		then
				source ./SRCBUILD
		else
				exit $E_SBE
		fi
}

srcinfo() # parse & echo various different $vars to STDOUT
{
		info_print()
		{
				echo -e "\e[0;31mSOURCE\e[0m\n"
				echo -e "\t$srcname - ($srcver)\n"
				echo -e "\e[0;31mINFO\e[0m\n"
				echo -e "  $info\n"
				echo -e "\e[0;31mPROJECT HOME\e[0m\n"
				echo -e "  $srcurl\n"	
				echo -e "\e[0;31mLICENSE\e[0m\n"
				echo -e "  \e[1;31mThis project is licenced under the following:\e[0m ${srccpy[*]}\n"
		}
		
		[ "$2" == "${args[6]}" ] && 
				{
						srcsrcinfo; info_print;
				} || \
						usage; usage_error; exit 1
}

srcdepends() # list/get dependencies for source
{ 		
		depnum=$(echo "${depends[*]}" | wc -w)
		echo -e "\n\t\e[1;31mDependencies\e[0m($depnum)\e[1;31m:\e[0m\n\n\t\t${depends[*]}\n"
		echo -e -n "\t\e[1;31mInstall?:\e[0m "
		read indep

		if [ "$indep" == "y" ] || [ "$indep" == "Y" ] || [ $indep == "yes" ] || [ $indep == "Yes" ] || [ $indep == "YES" ];
		then
				for dep in ${depends[*]}	
	    		do
	    			:# install depends
				done
		elif [ "$indep" == "n" ] || [ "$indep" == "N" ] || [ $indep == "no" ] || [ $indep == "No" ] || [ $indep == "NO" ];
		then
				exit 1
		fi
}

srcrepos() # source repository $vars
{
		gnu_repo='https://ftp.gnu.org/gnu'
		savannah_repo=''	
}

makesrc() # make a source-build
{
		srcsrcbuild
		if [ -n "${depends[*]}" ];
		then
				srcdepends
		elif [ -z $SRCARC ];
		then
				:
		fi
		srcbuild
}

[ "$#" -eq 0 ] &&
		{
				usage; usage_error 1;
		}

[ "$#" -gt 0 ] &&
		{
				[ "$1" == "${args[0]}" ] &&
						{
								[ -z "$2" ] &&
										{
												usage; usage_short; exit 0;
										}
								}
				[ "$1" == "${args[1]}" ] &&
						{
								[ -z "$2" ]
										{
												usage; usage_long; exit 0;
										}
						}
				[ "$1" == "${args[2]}" ] || [ "$1" == "${args[3]}" ] &&
						{
								[ -n "$2" ] && [ "$2" == "${args[6]}" ] &&
										{
												srcinfo; exit $?;
										}
								}
				[ "$1" == "${args[4]}" ] || [ "$1" == "${args[5]}" ] &&
						{
								:
						}
				[ "$1" == "${args[6]}" ] &&
						{
								[ -z "$2" ] &&
										{
												makesrc; exit $?;
										}
								}
				[ -n "$2" ] &&
						{
								[ "$2" == "${args[6]}" ] &&
										{
												[ "$1" == "${args[2]}" ] || [ "$1" == "${args[3]}" ] &&
														{
																srcinfo; exit $?;
														}
												}
								}
				} || \
						{ 
								usage; usage_error; exit 1; 
						}


