# Send SRCBUILD information to STDOUT
cmd_get_info()
{
		_has_user_config
		_read_SRCBUILD
		
		# Set color 
		local valid_colors=('$red' '$green' '$yellow' '$blue' '$magenta' '$bold_red' '$bold_green' '$bold_yellow' '$bold_blue' '$bold_magenta')
		local _color=$bold_red
		_tidy() { cut -d "|" -f 2; }
		
		# No color
		if [ "$DEFAULT" == "0" ] && [ -z "$color" ] || [ "$color" == "off" ]
		then
					_color=''
		fi
		
		# User color
		if [ "$DEFAULT" == "0" ] && [ -n "$color" ] && [ "$color" == "on" ] && [ -n "$info_color" ]
		then
					for vc in "${valid_colors[@]}"
					do
							if [ "$info_color" == "$vc" ];
							then
									_color=$info_color
							fi
					done
		fi
		
		# Redirect STDOUT when in in silent mode
		if [ "$QUIET" == "1" ];
		then
					tidy="_tidy > ./SRCBUILD.INFO"
		else
					tidy="_tidy >&2"
		fi
				
		# Send various variable data to STDOUT (tidy it up a bit)
		echo -e "\
		|${_color}SOURCE${reset}\n
		|  ${srcname} - ${srcver}\n
		|${_color}INFO${reset}\n
		|  ${srcinfo}\n
		|${_color}PROJECT HOME${reset}\n
		|  ${srcurl}\n
		|${_color}LICENSE${reset}\n
		|  ${_color}This project is licenced under the following:${reset} ${srccpy[*]}
		" | $tidy 
}

